[{"/Users/kylewandishin/coding/projects/automation-service/next-env.d.ts":"1","/Users/kylewandishin/coding/projects/automation-service/src/app/layout.tsx":"2","/Users/kylewandishin/coding/projects/automation-service/src/app/page.tsx":"3","/Users/kylewandishin/coding/projects/automation-service/src/components/global/Navbar.tsx":"4","/Users/kylewandishin/coding/projects/automation-service/src/providers/theme-provider.tsx":"5","/Users/kylewandishin/coding/projects/automation-service/tailwind.config.ts":"6"},{"size":228,"mtime":1728182112141,"results":"7","hashOfConfig":"8"},{"size":979,"mtime":1728183896840,"results":"9","hashOfConfig":"8"},{"size":177,"mtime":1728183896843,"results":"10","hashOfConfig":"8"},{"size":305,"mtime":1728183896847,"results":"11","hashOfConfig":"8"},{"size":332,"mtime":1728183896851,"results":"12","hashOfConfig":"8"},{"size":4131,"mtime":1728183896862,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"70w0jp",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kylewandishin/coding/projects/automation-service/next-env.d.ts",[],[],"/Users/kylewandishin/coding/projects/automation-service/src/app/layout.tsx",[],[],"/Users/kylewandishin/coding/projects/automation-service/src/app/page.tsx",[],[],"/Users/kylewandishin/coding/projects/automation-service/src/components/global/Navbar.tsx",["32","33"],[],"/Users/kylewandishin/coding/projects/automation-service/src/providers/theme-provider.tsx",[],[],"/Users/kylewandishin/coding/projects/automation-service/tailwind.config.ts",[],["34"],{"ruleId":"35","severity":2,"message":"36","line":3,"column":14,"nodeType":"37","messageId":"38","endLine":3,"endColumn":16,"suggestions":"39"},{"ruleId":"40","severity":2,"message":"41","line":5,"column":23,"nodeType":null,"messageId":"42","endLine":5,"endColumn":28},{"ruleId":"43","severity":2,"message":"44","line":133,"column":13,"nodeType":"45","messageId":"46","endLine":133,"endColumn":43,"suppressions":"47"},"@typescript-eslint/no-empty-object-type","The `{}` (\"empty object\") type allows any non-nullish value, including literals like `0` and `\"\"`.\n- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.\n- If you want a type meaning \"any object\", you probably want `object` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","TSTypeLiteral","noEmptyObject",["48","49"],"@typescript-eslint/no-unused-vars","'props' is defined but never used.","unusedVar","@typescript-eslint/no-require-imports","A `require()` style import is forbidden.","CallExpression","noRequireImports",["50"],{"data":"51","messageId":"52","fix":"53","desc":"54"},{"data":"55","messageId":"52","fix":"56","desc":"57"},{"kind":"58","justification":"59"},{"replacement":"60"},"replaceEmptyObjectType",{"range":"61","text":"60"},"Replace `{}` with `object`.",{"replacement":"62"},{"range":"63","text":"62"},"Replace `{}` with `unknown`.","directive","","object",[41,43],"unknown",[41,43]]